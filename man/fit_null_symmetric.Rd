% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_null_symmetric.R
\name{fit_null_symmetric}
\alias{fit_null_symmetric}
\title{fits model with B_kj constrained to equal g(B_k) for constraint fn g, for a symmetric constraint}
\usage{
fit_null_symmetric(
  B,
  Y,
  X,
  X_cup = NULL,
  k_constr,
  j_constr,
  j_ref,
  constraint_fn,
  constraint_grad_fn,
  rho_init = 1,
  tau = 1.2,
  kappa = 0.8,
  B_tol = 0.01,
  inner_tol = 0.01,
  constraint_tol = 1e-04,
  max_step = 5,
  c1 = 1e-04,
  maxit = 1000,
  inner_maxit = 25,
  verbose = FALSE,
  trackB = FALSE
)
}
\arguments{
\item{B}{description}

\item{Y}{Y (with augmentations)}

\item{X}{design matrix}

\item{X_cup}{design matrix for Y in long format. Defaults to NULL, in which case matrix is computed from X.}

\item{k_constr}{row index of B to constrain}

\item{j_constr}{col index of B to constrain}

\item{j_ref}{column index of convenience constraint}

\item{constraint_fn}{constraint function}

\item{constraint_grad_fn}{gradient of constraint fn}

\item{rho_init}{where to start quadratic penalty parameter}

\item{tau}{how much to increment rho by each iteration}

\item{kappa}{cutoff above which to increment rho. If distance to feasibility doesn't shrink by at least this factor in an iteration, increment rho by tau.}

\item{B_tol}{tolerance for convergence in $max_{k,j} |B^t_{kj} - B^{(t - 1)}_{kj}|$}

\item{inner_tol}{tolerance for inner loop}

\item{constraint_tol}{tolerance for $|B_kj - g(B_k)|$}

\item{max_step}{maximum step size}

\item{c1}{constant for armijo rule}

\item{maxit}{maximum iterations}

\item{inner_maxit}{max iterations per inner loop}

\item{verbose}{shout at you?}

\item{trackB}{track value of beta across iterations and return?}
}
\value{
A list containing elements \code{B}, \code{k_constr}, \code{j_constr}, \code{niter}
\code{gap}, \code{u}, \code{rho}, and \code{Bs}. \code{B} is a matrix containing parameter estimates
under the null (obtained by maximum likelihood on augmented observations Y),
\code{k_constr}, and \code{j_constr} give row and column indexes of the parameter
fixed to be equal to the constraint function $g()$ under the null. \code{niter} is a
scalar giving total number of outer iterations used to fit the null model,
\code{gap} gives the final value of $g(B_{k constr}) - B_{k constr, j constr}$,
\code{u} and \code{rho} are final values of augmented Lagrangian parameters, and
\code{Bs} is a data frame containing values of B by iteration if \code{trackB} was set
equal to TRUE (otherwise it contains a NULL value). - update based on new algorithm
}
\description{
fits model with B_kj constrained to equal g(B_k) for constraint fn g, for a symmetric constraint
}
